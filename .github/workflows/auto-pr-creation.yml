name: Auto PR Creation

on:
  issues:
    types: [labeled]

jobs:
  auto-create-pr:
    if: contains(github.event.label.name, 'enhancement') || contains(github.event.label.name, 'bug') || contains(github.event.label.name, 'feature')
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if auto-pr label exists
        id: check-label
        run: |
          # Check if issue has auto-pr label to prevent duplicate PRs
          labels=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r '.[].name')
          if echo "$labels" | grep -q "auto-pr"; then
            echo "auto_pr_exists=true" >> $GITHUB_OUTPUT
          else
            echo "auto_pr_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        if: steps.check-label.outputs.auto_pr_exists == 'false'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        if: steps.check-label.outputs.auto_pr_exists == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        if: steps.check-label.outputs.auto_pr_exists == 'false'
        run: npm install

      - name: Generate code with Gemini CLI
        if: steps.check-label.outputs.auto_pr_exists == 'false'
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          # Extract issue details
          issue_title="${{ github.event.issue.title }}"
          issue_body="${{ github.event.issue.body }}"
          issue_number="${{ github.event.issue.number }}"
          
          # Create branch name from issue
          branch_name="feature/issue-${issue_number}-$(echo "$issue_title" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/-$//')"
          
          # Create and switch to new branch
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$branch_name"
          
          # Use Gemini CLI to generate code based on issue
          echo "Generating code for: $issue_title"
          echo "Issue description: $issue_body"
          
          # Generate code using the CLI
          npm run cli:generate "$issue_number" "$issue_title" "$issue_body"
          
          # Check if any files were modified
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes generated by Gemini CLI"
            exit 0
          fi
          
          # Commit changes
          git add .
          git commit -m "Auto-generated code for issue #${issue_number}: $issue_title

          Generated by Gemini CLI based on issue requirements.
          
          Resolves #${issue_number}"
          
          # Push branch
          git push origin "$branch_name"
          
          # Store branch name for PR creation
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.check-label.outputs.auto_pr_exists == 'false' && env.BRANCH_NAME != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Auto-generated: ${{ github.event.issue.title }}`,
              head: process.env.BRANCH_NAME,
              base: 'main',
              body: `## Auto-generated PR for Issue #${{ github.event.issue.number }}

            **Original Issue:** ${{ github.event.issue.title }}

            **Description:**
            ${{ github.event.issue.body }}

            **Generated by:** Gemini CLI
            **Workflow:** Auto PR Creation

            ### Changes Made:
            - Code generated automatically based on issue requirements
            - Ready for review and testing

            **Closes #${{ github.event.issue.number }}**

            ---
            *This PR was automatically created by GitHub Actions using Gemini CLI.*`
            });

            // Add auto-pr label to issue to prevent duplicates
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number }},
              labels: ['auto-pr']
            });

            console.log(`Created PR #${pr.number}: ${pr.html_url}`);
